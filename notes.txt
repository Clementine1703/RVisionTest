Ручной частичный анализ OVAL-файла.

1. Был проведен анализ первых трех уязвимостей (патчей) в OVAL-файле. 
На мой взгляд, основными объектами, из которых состоит отдельная уязвимость являются:
 	а) Определения (definition)
	б) Критерии (сriteria)
	в) Тесты (test)
	г) Объекты (object)
	д) Состояния (state)

Также есть различные вспомогательные теги, которые помогают сделать код более читаемым и более точно описать те или иные объекты.

Для удобства, одна отдельная уязвимость была вынесена в файл "separate_patch_example.xml". 

2.
	a) Definition - основная часть OVAL-файла, которая говорит о чем-то важном, что система должна проверить на компьютере. В нашем случае Definition класса Patch (есть и другие), это значит, что в нем описаны патчи и обновления, которые можно применить к системе для устранения уязвимостей или улучшения безопасности.
	б) Criteria - критерии указывают на условия, при выполнении которых, данный патч должен быть применен к системе. К ним можно применять конструкции AND и OR. Они имеют описание и в них бывает ссылка на соответствующий тест.
	в) Test - тесты указывают на конкретные проверки или тесты, которые должны быть выполнены на целевой системе, чтобы удостовериться, что патч (обновление) было успешно применено или должно быть применено. Объект теста обычно имеет ссылки на объекты Object и State.
	г) Object - объекты используются для определения конкретных объектов, которые подлежат проверке или на которых должен быть применен патч. Объектом может быть программа, версия программы файл, путь и тд и тп.
	д) State - описывает ожидаемое состояние системы или объекта после применения патча. Нужен, чтобы понимать успешно применен патч или нет.





	